/**
\page  rig_config_page Xcvr Control Configuration

\tableofcontents

\section flrig_io_config flrig as xcvr controller

\image html config-rig-flrig.png "flrig control"
\image latex config-rig-flrig.png "flrig control" width=5.0in
<br>
flrig is a separate program that provides nearly 100% control over more than
60 different transceivers.  Using flrig with fldigi can enhance your digital
mode operating experience.  It is the recommended method of control when your
transceiver supports CAT operations and has been coded for flrig.

fldigi and flrig communicate changes in transceiver state using the xmlrpc
protocol over a local socket.  Transceiver control changes may be made
at the transceiver, flrig, or fldigi and the change will be annunciated at
the other two.  These changes are communicated ten times each second.  The
update limit is usually imposed by the transceiver and the baud rate selected
for the transceiver-computer interface.  Older transceivers will impose the
greatest restriction especially when it's firmware is busy with internal processes.

Select the "Enable flrig xcvr control with fldigi as client" for this method of
control.  fldigi will attempt to connect to the flrig server and will do so
periodically until the connection is established.  flrig may reside on the same
computer or on another that can be reached on the local area network.  The
computer address and port must match the location and configuration of flrig.  The
defaults are local host, 127.0.0.1, and port 12345.

\section rig_cat_control RigCAT xcvr control

\image html config-rig-rigcat.png "RigCAT control"
\image latex config-rig-rigcat.png "RigCAT control" width=5.0in
<br>

RigCAT is a rig control that was developed specifically for fldigi.  
It uses command / response definitions that are found in various \ref rig_xml_page "rig.xml"
files.  You can use a rig.xml file specific for your transceiver or
write and test one yourself.  The easiest way is to adapt an existing
rig xml file for a rig that is similar to your own.  ICOM uses almost
identical command/response strings for all of its transceiver line.
 Yaesu rigs have nearly all used unique command/response structures
until just recently.  The FT-450, FT-950 and others share a similar set
of commands and responses.
<br>

RigCAT commands and responses are defined in a rig specific xml file which
contains all of the required queries and responses in extended markup
language format. Please read the specification
document \ref rig_xml_page "rigxml" to learn more about this new way of
building generic rig interface definitions and how they are used with
fldigi.  fldigi will look for a file in the $HOME/.fldigi/rigs directory for
all files with extension ".xml".  These contain definitions for the
transceiver indicated by the file name, ie: FT-450.xml, IC-756PRO.xml,
etc.  You can download the appropriate xml files from the resource directory
tree <a href="http://www.w1hkj.com/xmls">http://www.w1hkj.com/xmls</a>
or from the
archives <a href="http://www.w1hkj.com/xmlarchives.html">web page</a>.  Place
the file in your rigs directory and fldigi will find it.
<br>

You will need to specify how your PTT will be triggered.  This can be
using a CAT command, the RTS or DTR pins or none.  None would be
appropriate if you are using the rig's VOX or an outboard sound card
interface such as the SignalLink SL-1+ which produces its own VOX type of
PTT.  In that case simply leave all of the PTT options unselected.
<br>

If you are using a transceiver or a rig interface such as CI-V that echos
all serial data you check off the "Commands are echoed" box.  That
will suppress fldigi trying to respond to a command it just sent to the
transceiver.
<br>

You may need to try various values of retries, retry interval, and command
interval to achieve consistent rigcat control.
<br>

Press the Initialize button after setting all of the parameters.  If the
settings are all correct fldigi should start receiving frequency
information from the rig and annunciating them on the rig control
frequency display.

\section hamlib_cat_control Hamlib xcvr control

Hamlib is a set of standard libraries for interfacing to a large number of
transceivers.  The hamlib library system consists of a front end
which acts on behalf of all rigs and backends which are specific to
each rig.  The hamlib library is not developed or maintained by the fldigi
developers.
<br>

\image html config-rig-hamlib.png "Hamlib CAT Control"
\image latex config-rig-hamlib.png "Hamlib CAT Control" width=5.0in
<br>

Select your transceiver from the list of supported units.  Then select
the serial port and baud rate.  If you are familiar with the
hamlib library you can send various startup sequences to the rig using
the advanced configuration.  PTT control can be achieved using CAT
commands or via DTR / RTS on the same port as the control comms.
 You might also need to specifiy whether RTS/CTS flow control is
uses (Kenwood rigs use this quite often) or if Xon/Xoff flow control is
used.
<br>

You may need to try various values of retries, retry interval, and command
interval to achieve consistent hamlib control.
<br>

Press the Initialize button after setting all of the parameters.  If the
settings are all correct fldigi should start receiving frequency
information from the rig and annunciating them on the rig control
frequency display.
<br>

\section xml_rpc_cat External program XmlRpc control
<br>

\image html config-rig-xmlrpc.png "Xml-Rpc CAT Control"
\image latex config-rig-xmlrpc.png "Xml-Rpc CAT Control" width=5.0in
<br>

Xml-Rpc allows third party software to control various aspects of fldigi
operation including but not limited to rig control.  If you are using a 
third party interface such as DxKeeper Bridge you might
be instructed to select this method of CAT.
<br>

\section hardware_ptt  Use hardware PTT only

\image html config-rig-hardware.png "Hardware PTT control"
\image latex config-rig-hardware.png "Hardware PTT control" width=5.0in
<br>

<b>Serial Port using DTR or RTS</b>
<br>

The simplest rig control is just being able to control the push to talk via
an external transistor switch.  You set this type of control on the hardware
configuration tab for rig control.
<br>

You select this operation by checking the "Use serial port PTT".
 Select the serial port from the list (fldigi will have searched
for available ports).  Then specify whether the h/w uses RTS or
DTR and whether a + or - voltage is required to toggle PTT on.

You can use a serial port for control with the RTS and DTR pins
configured for you particular interface.
The program allows you to use RTS, DTR or BOTH for the PTT
signal.  Press the Initialize button to start the serial port.
<br>

<b>Parallel Port (Linux and Free BSD only)</b>
<br>

Fldigi sets and clears the parallel port pin, PARPORT_CONTROL_INIT, pin 16 on
the 25 pin parallel port connector.  Keydown sets Pin 16 to +5
volts and keyup sets the voltage to zero.
<br>

<b>&mu;H Router (MacOS X)</b>
<br>

Simular functionality can be achieved on the Macintosh operating system using
'&mu;H Router' by Kok Chen, W7AY.   See
<a href="http://www.w7ay.net/site/Applications/Router/index.html">&mu;H Router Website</a>
for specific details and requirements. A selectable (check box) option will be
available on the Rig->Hardware PTT Configuration panel.
<br>

<b>PTT delays</b>
<br>

You can accommodate delays in transceiver switching between
receive and transmit by adjusting the PTT delays.  The control
values are in milliseconds.  These controls have no effect on
external PTT circuits such as those implemented in the SignaLink
interfaces.  They rely on detecting the audio data stream.
You can use a combination of macro tags in a macro key definition to
achieve a resolution.  For example try a macro definition similar
to this to insure that the RSID is sent via a slow FM xcvr (or via a
VHF repeater)
<br>

\verbatim

<TX><MODEM:NULL><IDLE:2.5>
<!MODEM:MT63-500>
<TXRSID:on>

\endverbatim

<br>

Change the idle time value (in fractional seconds) to suit your needs.
<br>

\section audio_vox_ptt PTT using audio tone

Fldigi can generate a 1000 Hz tone for the duration of the PTT keydown period.
When selected this tone is on the right channel of the stereo connector.
 A simple tone detector/filter and transistor switch can be used to generate
a PTT signal from this sound card output.  Jim, W5ZIT, has provided
details on building a \ref w5zit_rt_channel_page "right channel PTT interface" for this
type of hardware control.
<br>

\ref rig_config_page "Return to Top of Page"
<br>
\ref main_page "Return to Main Page"

*/
